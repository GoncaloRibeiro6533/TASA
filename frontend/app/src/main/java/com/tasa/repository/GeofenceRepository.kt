package com.tasa.repository

import com.tasa.domain.Location
import com.tasa.repository.interfaces.GeofenceRepositoryInterface
import com.tasa.storage.TasaDB
import com.tasa.storage.entities.GeofenceEntity

class GeofenceRepository(
    private val local: TasaDB,
) : GeofenceRepositoryInterface {
    override suspend fun getGeofenceById(id: Int): GeofenceEntity? {
        return local.geofenceDao().getGeofenceById(id)
    }

    override suspend fun getAllGeofences(): List<GeofenceEntity> {
        return local.geofenceDao().getAllGeofences()
    }

    override suspend fun createGeofence(location: Location): Long {
        return local.geofenceDao().insertGeofence(
            GeofenceEntity(
                id = 0,
                // Auto-generated by Room
                name = location.name,
                latitude = location.latitude,
                longitude = location.longitude,
                radius = location.radius,
            ),
        )
    }

    override suspend fun updateGeofence(
        geofenceEntity: GeofenceEntity,
        location: Location,
    ) {
        local.geofenceDao().updateGeofence(
            id = geofenceEntity.id,
            name = location.name,
            latitude = location.latitude,
            longitude = location.longitude,
            radius = location.radius,
        )
    }

    override suspend fun deleteGeofence(geofenceEntity: GeofenceEntity) {
        local.geofenceDao().deleteGeofenceById(geofenceEntity.id)
    }

    override suspend fun clear() {
        local.geofenceDao().clear()
    }
}
